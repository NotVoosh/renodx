Texture2D<float4> t2 : register(t2);
Texture2D<float4> t1 : register(t1);
Texture2D<float4> t0 : register(t0);
SamplerState s2_s : register(s2);
SamplerState s1_s : register(s1);
SamplerState s0_s : register(s0);
cbuffer cb2 : register(b2){
  float4 cb2[1];
}
cbuffer cb1 : register(b1){
  float4 cb1[1];
}
cbuffer cb0 : register(b0){
  float4 cb0[20];
}

#define cmp -

void main(
  float2 v0 : TEXCOORD0,
  float2 w0 : TEXCOORD3,
  float4 v1 : SV_POSITION0,
  float4 v2 : COLOR0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = v0.xy / cb0[2].xy;
  r0.xy = log2(r0.xy);
  r0.xy = cb0[10].xy * r0.xy;
  r0.xy = exp2(r0.xy);
  r0.xy = min(float2(1,1), r0.xy);
  r1.xyzw = -cb0[12].xyzw + cb0[11].xyzw;
  r1.xyzw = r0.xxxx * r1.xyzw + cb0[12].xyzw;
  r2.xyzw = -cb0[14].xyzw + cb0[13].xyzw;
  r2.xyzw = r0.xxxx * r2.xyzw + cb0[14].xyzw;
  r1.xyzw = -r2.xyzw + r1.xyzw;
  r0.xyzw = r0.yyyy * r1.xyzw + r2.xyzw;
  r1.xy = float2(0,-0.5) + v0.xy;
  r2.xw = float2(24,19);
  r2.yz = cb0[18].ww;
  r1.zw = r2.xy * r1.xy;
  r1.zw = r1.zw * r2.zw;
  r1.zw = floor(r1.zw);
  r1.zw = float2(4,4) * r1.zw;
  r2.xy = cmp(cb1[0].xy >= -cb1[0].xy);
  r2.xy = r2.xy ? float2(1,1) : float2(-1,-1);
  r2.zw = cb1[0].xy * r2.xy;
  r2.zw = frac(r2.zw);
  r2.xy = r2.xy * r2.zw;
  r2.xy = r2.xy * float2(12,12) + float2(50,50);
  r2.xy = floor(r2.xy);
  r1.zw = r2.xy * r1.zw;
  r1.z = dot(r1.zw, float2(127.099998,311.700012));
  r1.z = sin(r1.z);
  r1.z = 43758.5469 * r1.z;
  r1.z = frac(r1.z);
  r1.z = cb2[0].x + r1.z;
  r1.w = cmp(r1.z >= -r1.z);
  r1.w = r1.w ? 1 : -1;
  r1.z = r1.z * r1.w;
  r1.z = frac(r1.z);
  r1.z = r1.w * r1.z;
  r1.w = r1.z * r1.z;
  r1.z = r1.z * r1.w;
  r1.z = cb0[18].z * r1.z;
  r3.xw = float2(38,14);
  r3.yz = cb0[18].ww;
  r1.xy = r3.xy * r1.xy;
  r1.xy = r1.xy * r3.zw;
  r1.xy = floor(r1.xy);
  r1.xy = float2(4,4) * r1.xy;
  r1.xy = r1.xy * r2.xy;
  r2.xy = float2(2,1) * r2.xy;
  r1.w = dot(r2.xy, float2(127.099998,311.700012));
  r1.w = sin(r1.w);
  r1.w = 43758.5469 * r1.w;
  r1.w = frac(r1.w);
  r1.x = dot(r1.xy, float2(127.099998,311.700012));
  r1.x = sin(r1.x);
  r1.x = 43758.5469 * r1.x;
  r1.x = frac(r1.x);
  r1.xw = cb2[0].xx + r1.xw;
  r1.y = cmp(r1.x >= -r1.x);
  r1.y = r1.y ? 1 : -1;
  r1.x = r1.x * r1.y;
  r1.x = frac(r1.x);
  r1.x = r1.y * r1.x;
  r1.y = r1.x * r1.x;
  r1.x = r1.x * r1.y;
  r1.x = r1.z * r1.x;
  r1.x = 0.0199999996 * r1.x;
  r1.y = cmp(r1.w >= -r1.w);
  r1.y = r1.y ? 1 : -1;
  r1.z = r1.w * r1.y;
  r1.z = frac(r1.z);
  r1.y = r1.y * r1.z;
  r1.x = r1.x * r1.y;
  r2.xy = cb2[0].xx + cb1[0].xw;
  r2.zw = cb0[9].xy * r2.xx;
  r3.xy = cmp(r2.zw >= -r2.zw);
  r3.xy = r3.xy ? float2(1,1) : float2(-1,-1);
  r2.zw = r3.xy * r2.zw;
  r2.zw = frac(r2.zw);
  r2.zw = r3.xy * r2.zw + w0.xy;
  r3.xyzw = t0.Sample(s2_s, r2.zw).xyzw;
  r2.z = -0.5 + r3.x;
  r2.z = 0.200000003 * r2.z;
  r2.zw = r2.zz * cb0[9].zz + v0.xy;
  r1.yw = float2(0,0);
  r1.xy = r2.zw + r1.xy;
  r3.xyzw = t1.Sample(s0_s, r1.xy).xyzw;
  r1.xy = v2.yw * r3.yw;
  r1.z = 0.100000001 * cb0[18].x;
  r1.zw = r2.zw + r1.zw;
  r3.xyzw = t1.Sample(s0_s, r1.zw).xyzw;
  r1.zw = v2.xw * r3.xw;
  r3.x = -0.100000001 * cb0[18].x;
  r3.y = 0;
  r3.xy = r3.xy + r2.zw;
  r4.xyzw = t2.Sample(s1_s, r2.zw).xyzw;
  r3.xyzw = t1.Sample(s0_s, r3.xy).xyzw;
  r2.zw = v2.zw * r3.zw;
  r3.x = max(r2.w, r1.w);
  r5.x = r1.z * r1.w;
  r5.z = r2.z * r2.w;
  r1.z = cb0[18].y * r3.x;
  r5.w = max(r1.z, r1.y);
  r5.y = r1.x;
  r0.xyzw = -r5.xyzw + r0.xyzw;
  r0.xyzw = cb0[9].wwww * r0.xyzw + r5.xyzw;
  r0.xyzw = r0.xyzw * r5.wwww;
  r1.x = r4.w * r0.w;
  r1.x = cb0[7].x * r1.x;
  r1.xyz = cb0[6].xyz * r1.xxx;
  r1.xyz = r4.xyz * r1.xyz;
  r3.xyz = log2(r0.xyz);
  r3.xyz = cb0[15].yyy * r3.xyz;
  r3.xyz = exp2(r3.xyz);
  r3.xyz = cb0[15].xxx * r3.xyz;
  r3.xyz = floor(r3.xyz);
  r3.xyz = r3.xyz / cb0[15].xxx;
  r3.xyz = log2(r3.xyz);
  r1.w = 1 / cb0[15].y;
  r3.xyz = r1.www * r3.xyz;
  r3.xyz = exp2(r3.xyz);
  r0.xyz = r3.xyz * cb0[7].yyy + r1.xyz;
  r1.x = cmp(r2.x >= -r2.x);
  r1.x = r1.x ? 1 : -1;
  r1.y = r2.x * r1.x;
  r1.z = r2.y * cb0[19].x + 0.0500000007;
  r1.yz = frac(r1.yz);
  r1.x = r1.x * r1.y;
  r1.x = r1.x * cb0[16].y + v0.y;
  r1.y = cb0[16].x + cb0[15].z;
  r1.w = r1.x * r1.y;
  r1.w = cmp(r1.w >= -r1.w);
  r1.w = r1.w ? r1.y : -r1.y;
  r2.x = 1 / r1.w;
  r1.x = r2.x * r1.x;
  r1.x = frac(r1.x);
  r1.x = r1.w * r1.x;
  r1.x = r1.x / r1.y;
  r1.y = cb0[16].x / r1.y;
  r1.w = r1.y + -abs(r1.x);
  r1.x = abs(r1.x) + -r1.y;
  r1.y = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r1.y = (int)-r1.y + (int)r1.w;
  r1.y = (int)r1.y;
  r1.y = max(0, r1.y);
  r1.w = cmp(r1.y >= 0.00999999978);
  r2.xyz = r1.www ? float3(0,0,0) : cb0[17].xyz;
  r2.xyz = r2.xyz * r0.www;
  r1.w = cmp(0 < r1.x);
  r2.w = cmp(r1.x < 0);
  r1.x = saturate(r1.x);
  r1.w = (int)-r1.w + (int)r2.w;
  r1.w = (int)r1.w;
  r1.w = max(0, r1.w);
  r1.w = cb0[16].z * r1.w;
  r1.w = max(1, r1.w);
  r2.xyz = r0.xyz * r1.www + r2.xyz;
  r1.w = saturate(cb0[16].z);
  r1.w = -cb0[15].w + r1.w;
  r1.x = r1.x * r1.w + cb0[15].w;
  r1.w = 1 + -r1.x;
  r1.x = r1.y * r1.w + r1.x;
  r2.w = r1.x * r0.w;
  r2.xyzw = r2.xyzw + -r0.xyzw;
  r0.xyzw = cb0[16].wwww * r2.xyzw + r0.xyzw;
  r1.x = 1 + -cb0[19].y;
  r1.x = cmp(r1.x >= r1.z);
  r1.x = r1.x ? 1.000000 : 0;
  r1.x = saturate(r0.w * r1.x + cb0[19].z);
  r1.x = r1.x * r0.w;
  r0.w = cb0[5].x * r1.x;
  o0.xyzw = cb0[4].xyzw * r0.xyzw;
  o0 = saturate(o0);
  return;
}