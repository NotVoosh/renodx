#include "../tonemap.hlsl"

Texture2D<float4> t7 : register(t7);
Texture2D<float4> t6 : register(t6);
Texture2D<float4> t5 : register(t5);
Texture2D<float4> t4 : register(t4);
Texture2D<float4> t3 : register(t3);
Texture2D<float4> t2 : register(t2);
Texture2D<float4> t1 : register(t1);
Texture2D<float4> t0 : register(t0);
SamplerState s0_s : register(s0);
cbuffer cb0 : register(b0){
  float4 cb0[148];
}

void main(
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.yz = -cb0[132].yz + v1.xy;
  r1.x = cb0[132].x * r0.y;
  r0.x = frac(r1.x);
  r1.x = r0.x / cb0[132].x;
  r0.w = -r1.x + r0.y;
  r0.xyz = r0.xzw * cb0[132].www;
  r0.xyz = lutShaper(r0.xyz, true);
  float3 preCG = r0.xyz;
  r1.x = dot(float3(0.390405,0.549941,0.00892632), r0.xyz);
  r1.y = dot(float3(0.0708416,0.963172,0.00135775), r0.xyz);
  r1.z = dot(float3(0.0231082,0.128021,0.936245), r0.xyz);
  r0.xyz = cb0[133].xyz * r1.xyz;
  r1.x = dot(float3(2.85847,-1.62879,-0.0248910), r0.xyz);
  r1.y = dot(float3(-0.210182,1.15820,0.000324281), r0.xyz);
  r1.z = dot(float3(-0.0418120,-0.118169,1.06867), r0.xyz);
  r0.x = dot(float3(0.4397010, 0.3829780, 0.1773350), r1.xyz);
  r0.y = dot(float3(0.0897923, 0.8134230, 0.0967616), r1.xyz);
  r0.z = dot(float3(0.0175440, 0.1115440, 0.8707040), r1.xyz);
  r0.xyz = acesccEncode(r0.xyz);
  r0.xyz = float3(-0.4135884,-0.4135884,-0.4135884) + r0.xyz;
  r0.xyz = r0.xyz * cb0[138].zzz + float3(0.4135884,0.4135884,0.4135884);
  r1.xyz = acescc::Decode(r0.xyz);
  r0.x = dot(float3(1.45143926,-0.236510754,-0.214928567), r1.xyz);
  r0.y = dot(float3(-0.0765537769,1.17622972,-0.0996759236), r1.xyz);
  r0.z = dot(float3(0.00831614807,-0.00603244966,0.997716308), r1.xyz);
  r0.xyz = cb0[134].xyz * r0.xyz;
  r0.xyz = max(float3(0,0,0), r0.xyz);
  r0.xyz = pow(r0.xyz, 1.f / 2.2f);
  r1.xyz = r0.xyz + r0.xyz;
  r2.xyz = r0.xyz * r0.xyz;
  r3.xyz = min(float3(1,1,1), r0.xyz);
  r0.xyz = sqrt(r0.xyz);
  r0.w = dot(r3.xyz, float3(0.272228986,0.674081981,0.0536894985));
  r0.w = saturate(cb0[146].w + r0.w);
  r1.w = 1 + -r0.w;
  r3.xyz = float3(-0.5,-0.5,-0.5) + cb0[146].xyz;
  r3.xyz = r1.www * r3.xyz + float3(0.5,0.5,0.5);
  r4.xyz = -r3.xyz * float3(2,2,2) + float3(1,1,1);
  r2.xyz = r4.xyz * r2.xyz;
  r2.xyz = r1.xyz * r3.xyz + r2.xyz;
  r4.xyz = step(0.5, r3.xyz);
  r5.xyz = 1.0 - r4.xyz;
  r2.xyz = r5.xyz * r2.xyz;
  r5.xyz = float3(1,1,1) + -r3.xyz;
  r3.xyz = r3.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.xyz = r5.xyz * r1.xyz;
  r0.xyz = r0.xyz * r3.xyz + r1.xyz;
  r0.xyz = r0.xyz * r4.xyz + r2.xyz;
  r1.xyz = r0.xyz + r0.xyz;
  r2.xyz = r0.xyz * r0.xyz;
  r0.xyz = sqrt(r0.xyz);
  r3.xyz = float3(-0.5,-0.5,-0.5) + cb0[147].xyz;
  r3.xyz = r0.www * r3.xyz + float3(0.5,0.5,0.5);
  r4.xyz = -r3.xyz * float3(2,2,2) + float3(1,1,1);
  r2.xyz = r4.xyz * r2.xyz;
  r2.xyz = r1.xyz * r3.xyz + r2.xyz;
  r4.xyz = step(0.5, r3.xyz);
  r5.xyz = 1.0 - r4.xyz;
  r2.xyz = r5.xyz * r2.xyz;
  r5.xyz = float3(1,1,1) + -r3.xyz;
  r3.xyz = r3.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.xyz = r5.xyz * r1.xyz;
  r0.xyz = r0.xyz * r3.xyz + r1.xyz;
  r0.xyz = r0.xyz * r4.xyz + r2.xyz;
  r0.xyz = pow(abs(r0.xyz), 2.2f);
  r1.x = dot(r0.xyz, cb0[135].xyz);
  r1.y = dot(r0.xyz, cb0[136].xyz);
  r1.z = dot(r0.xyz, cb0[137].xyz);
  r0.xyz = cb0[143].xyz * r1.xyz;
  r0.w = dot(r1.xyz, float3(0.272228986,0.674081981,0.0536894985));
  r2.xy = -cb0[145].xz + r0.ww;
  r2.zw = cb0[145].yw + -cb0[145].xz;
  r2.zw = float2(1,1) / r2.zw;
  r2.xy = saturate(r2.xy * r2.zw);
  r2.zw = r2.xy * float2(-2,-2) + float2(3,3);
  r2.xy = r2.xy * r2.xy;
  r0.w = -r2.z * r2.x + 1;
  r1.w = 1 + -r0.w;
  r1.w = -r2.w * r2.y + r1.w;
  r2.x = r2.w * r2.y;
  r0.xyz = r1.www * r0.xyz;
  r2.yzw = cb0[142].xyz * r1.xyz;
  r1.xyz = cb0[144].xyz * r1.xyz;
  r0.xyz = r2.yzw * r0.www + r0.xyz;
  r0.xyz = r1.xyz * r2.xxx + r0.xyz;
  float3 preLGG = r0.xyz;
  r0.xyz = r0.xyz * cb0[141].xyz + cb0[139].xyz;
  r2.xyz = sign(r0.xyz) * pow(abs(r0.xyz), cb0[140].xyz);
  r2.xyz = liftGammaGainScaling(r2.xyz, preLGG, cb0[139].xyz, cb0[140].xyz, cb0[141].xyz, 1);
  r3.xy = r2.zy;
  r0.xy = r2.yz + -r3.xy;
  r1.x = step(r2.z, r3.y);
  r3.zw = float2(-1.0, 2.0 / 3.0);
  r0.zw = float2(1,-1);
  r0.xyzw = r1.xxxx * r0.xywz + r3.xywz;
  r1.x = step(r0.x, r2.x);
  r3.z = r0.w;
  r0.w = r2.x;
  r2.x = dot(r2.xyz, float3(0.212672904,0.715152204,0.0721750036));
  r3.xyw = r0.wyx;
  r3.xyzw = r3.xyzw + -r0.xyzw;
  r0.xyzw = r1.xxxx * r3.xyzw + r0.xyzw;
  r1.x = min(r0.w, r0.y);
  r1.x = -r1.x + r0.x;
  r1.y = r1.x * 6.0 + 0.0001;
  r0.y = r0.w + -r0.y;
  r0.y = r0.y / r1.y;
  r0.y = r0.z + r0.y;
  r3.x = abs(r0.y);
  r2.z = cb0[138].x + r3.x;
  r2.yw = float2(0,0);
  r4.xyzw = t4.SampleBias(s0_s, r2.zw, cb0[5].x).xyzw;
  r5.xyzw = t7.SampleBias(s0_s, r2.xy, cb0[5].x).xyzw;
  r5.x = saturate(r5.x);
  r4.x = saturate(r4.x);
  r0.y = -0.5 + r4.x;
  r0.y = r2.z + r0.y;
  r1.yz = float2(1,-1) + r0.yy;
  r0.z = (r0.y > 1) ? r1.z : r0.y;
  r0.y = (r0.y < 0) ? r1.y : r0.z;
  r0.yzw = float3(1.0, 2.0 / 3.0, 1.0 / 3.0) + r0.yyy;
  r0.yzw = frac(r0.yzw);
  r0.yzw = r0.yzw * float3(6,6,6) + float3(-3,-3,-3);
  r0.yzw = saturate(float3(-1,-1,-1) + abs(r0.yzw));
  r0.yzw = float3(-1,-1,-1) + r0.yzw;
  r1.y = 0.0001 + r0.x;
  r3.z = r1.x / r1.y;
  r0.yzw = r3.zzz * r0.yzw + float3(1,1,1);
  r1.xyz = r0.xxx * r0.yzw;
  r1.x = dot(r1.xyz, float3(0.272228986,0.674081981,0.0536894985));
  r0.xyz = r0.xxx * r0.yzw + -r1.xxx;
  r3.yw = float2(0,0);
  r2.xyzw = t5.SampleBias(s0_s, r3.xy, cb0[5].x).xyzw;
  r3.xyzw = t6.SampleBias(s0_s, r3.zw, cb0[5].x).xyzw;
  r3.x = saturate(r3.x);
  r2.x = saturate(r2.x);
  r0.w = r2.x + r2.x;
  r0.w = dot(r3.xx, r0.ww);
  r0.w = r5.x * r0.w;
  r0.w = dot(cb0[138].yy, r0.ww);
  r0.xyz = r0.www * r0.xyz + r1.xxx;
  r0.w = max(r0.x, r0.y);
  r0.w = max(r0.w, r0.z);
  r0.w = 1 + r0.w;
  r0.w = 1 / r0.w;
  r0.xyz = r0.xyz * r0.www + float3(0.00390625,0.00390625,0.00390625);
  r0.w = 0;
  r1.xyzw = t0.SampleBias(s0_s, r0.xw, cb0[5].x).xyzw;
  r1.x = saturate(r1.x);
  r2.xyzw = t0.SampleBias(s0_s, r0.yw, cb0[5].x).xyzw;
  r0.xyzw = t0.SampleBias(s0_s, r0.zw, cb0[5].x).xyzw;
  r1.z = saturate(r0.x);
  r1.y = saturate(r2.x);
  r0.xyz = float3(0.00390625,0.00390625,0.00390625) + r1.xyz;
  r0.w = 0;
  r1.xyzw = t1.SampleBias(s0_s, r0.xw, cb0[5].x).xyzw;
  r1.x = saturate(r1.x);
  r2.xyzw = t2.SampleBias(s0_s, r0.yw, cb0[5].x).xyzw;
  r0.xyzw = t3.SampleBias(s0_s, r0.zw, cb0[5].x).xyzw;
  r1.z = saturate(r0.x);
  r1.y = saturate(r2.x);
  r0.x = max(r1.x, r1.y);
  r0.x = max(r0.x, r1.z);
  r0.x = 1 + -r0.x;
  r0.x = 1 / r0.x;
  r0.xyz = r1.xyz * r0.xxx;
  r0.xyz = max(float3(0,0,0), r0.xyz);
  r1.y = dot(float3(0.695452213,0.140678704,0.163869068), r0.xyz);
  r1.z = dot(float3(0.0447945632,0.859671116,0.0955343172), r0.xyz);
  r1.w = dot(float3(-0.00552588282,0.00402521016,1.00150073), r0.xyz);
  /*r0.xyz = r1.wzy + -r1.zyw;
  r0.xy = r1.wz * r0.xy;
  r0.x = r0.x + r0.y;
  r0.x = r1.y * r0.z + r0.x;
  r0.x = max(0, r0.x);
  r0.x = sqrt(r0.x);
  r0.y = r1.w + r1.z;
  r0.y = r0.y + r1.y;
  r0.x = r0.x * 1.75 + r0.y;
  r0.y = 0.333333343 * r0.x;
  r0.y = 0.0799999982 / r0.y;
  r0.z = min(r1.y, r1.z);
  r0.z = min(r0.z, r1.w);
  r0.z = max(9.99999975e-05, r0.z);
  r0.w = max(r1.y, r1.z);
  r0.w = max(r0.w, r1.w);
  r2.xy = max(float2(9.99999975e-05,0.00999999978), r0.ww);
  r0.z = r2.x + -r0.z;
  r0.z = r0.z / r2.y;
  r0.yw = float2(-0.5,-0.400000006) + r0.yz;
  r1.x = 2.5 * r0.w;
  r0.w = cmp(r0.w >= 0);
  r0.w = r0.w ? 1 : -1;
  r1.x = 1 + -abs(r1.x);
  r1.x = max(0, r1.x);
  r1.x = -r1.x * r1.x + 1;
  r0.w = r0.w * r1.x + 1;
  r0.w = 0.0250000004 * r0.w;
  r0.y = r0.w * r0.y;
  r1.x = cmp(r0.x >= 0.479999989);
  r0.x = cmp(0.159999996 >= r0.x);
  r0.y = r1.x ? 0 : r0.y;
  r0.x = r0.x ? r0.w : r0.y;
  r0.x = 1 + r0.x;
  r2.yzw = r1.yzw * r0.xxx;
  r0.y = -r1.y * r0.x + 0.0299999993;
  r0.w = r1.z * r0.x + -r2.w;
  r0.w = 1.73205078 * r0.w;
  r1.x = r2.y * 2 + -r2.z;
  r0.x = -r1.w * r0.x + r1.x;
  r1.x = max(abs(r0.w), abs(r0.x));
  r1.x = 1 / r1.x;
  r1.y = min(abs(r0.w), abs(r0.x));
  r1.x = r1.y * r1.x;
  r1.y = r1.x * r1.x;
  r1.z = r1.y * 0.0208350997 + -0.0851330012;
  r1.z = r1.y * r1.z + 0.180141002;
  r1.z = r1.y * r1.z + -0.330299497;
  r1.y = r1.y * r1.z + 0.999866009;
  r1.z = r1.x * r1.y;
  r1.z = r1.z * -2 + 1.57079637;
  r1.w = cmp(abs(r0.x) < abs(r0.w));
  r1.z = r1.w ? r1.z : 0;
  r1.w = min(r0.w, r0.x);
  r0.w = max(r0.w, r0.x);
  r0.x = cmp(r0.x < -r0.x);
  r0.x = r0.x ? -3.141593 : 0;
  r0.w = cmp(r0.w >= -r0.w);
  r1.w = cmp(r1.w < -r1.w);
  r0.w = r0.w ? r1.w : 0;
  r1.x = r1.x * r1.y + r1.z;
  r0.x = r1.x + r0.x;
  r0.x = r0.w ? -r0.x : r0.x;
  r1.xy = cmp(r2.zw == r2.yz);
  r0.w = r1.y ? r1.x : 0;
  r0.x = 57.2957802 * r0.x;
  r0.x = r0.w ? 0 : r0.x;
  r0.w = cmp(r0.x < 0);
  r1.x = 360 + r0.x;
  r0.x = r0.w ? r1.x : r0.x;
  r0.w = cmp(180 < r0.x);
  r1.xy = float2(360,-360) + r0.xx;
  r0.w = r0.w ? r1.y : r0.x;
  r0.x = cmp(r0.x < -180);
  r0.x = r0.x ? r1.x : r0.w;
  r0.x = 0.0148148146 * r0.x;
  r0.x = 1 + -abs(r0.x);
  r0.x = max(0, r0.x);
  r0.w = r0.x * -2 + 3;
  r0.x = r0.x * r0.x;
  r0.x = r0.w * r0.x;
  r0.x = r0.x * r0.x;
  r0.x = r0.x * r0.z;
  r0.x = r0.x * r0.y;
  r2.x = r0.x * 0.180000007 + r2.y;
  r0.x = dot(float3(1.45143926,-0.236510754,-0.214928567), r2.xzw);
  r0.y = dot(float3(-0.0765537769,1.17622972,-0.0996759236), r2.xzw);
  r0.z = dot(float3(0.00831614807,-0.00603244966,0.997716308), r2.xzw);
  r0.xyz = max(float3(0,0,0), r0.xyz);
  r0.w = dot(r0.xyz, float3(0.272228986,0.674081981,0.0536894985));
  r0.xyz = r0.xyz + -r0.www;
  r0.xyz = r0.xyz * float3(0.959999979,0.959999979,0.959999979) + r0.www;
  r1.xyz = float3(0.0245785993,0.0245785993,0.0245785993) + r0.xyz;
  r1.xyz = r0.xyz * r1.xyz + float3(-9.05370034e-05,-9.05370034e-05,-9.05370034e-05);
  r2.xyz = r0.xyz * float3(0.983729005,0.983729005,0.983729005) + float3(0.432951003,0.432951003,0.432951003);
  r0.xyz = r0.xyz * r2.xyz + float3(0.238080993,0.238080993,0.238080993);
  r0.xyz = r1.xyz / r0.xyz;
  r1.z = dot(float3(-0.00557464967,0.0040607336,1.01033914), r0.xyz);
  r1.x = dot(float3(0.662454188,0.134004205,0.156187683), r0.xyz);
  r1.y = dot(float3(0.272228718,0.674081743,0.0536895171), r0.xyz);
  r0.x = dot(r1.xyz, float3(1,1,1));
  r0.x = max(9.99999975e-05, r0.x);
  r0.xy = r1.xy / r0.xx;
  r0.w = max(0, r1.y);
  r0.w = min(65504, r0.w);
  r0.w = log2(r0.w);
  r0.w = 0.981100023 * r0.w;
  r1.y = exp2(r0.w);
  r0.w = 1 + -r0.x;
  r0.z = r0.w + -r0.y;
  r0.y = max(9.99999975e-05, r0.y);
  r0.y = r1.y / r0.y;
  r1.xz = r0.xz * r0.yy;
  r0.x = dot(float3(1.6410234,-0.324803293,-0.236424699), r1.xyz);
  r0.y = dot(float3(-0.663662851,1.61533165,0.0167563483), r1.xyz);
  r0.z = dot(float3(0.0117218941,-0.00828444213,0.988394856), r1.xyz);
  r0.w = dot(r0.xyz, float3(0.272228986,0.674081981,0.0536894985));
  r0.xyz = r0.xyz + -r0.www;
  r0.xyz = r0.xyz * float3(0.930000007,0.930000007,0.930000007) + r0.www;
  r1.x = dot(float3(0.662454188,0.134004205,0.156187683), r0.xyz);
  r1.y = dot(float3(0.272228718,0.674081743,0.0536895171), r0.xyz);
  r1.z = dot(float3(-0.00557464967,0.0040607336,1.01033914), r0.xyz);
  r0.x = dot(float3(0.987223983,-0.00611326983,0.0159533005), r1.xyz);
  r0.y = dot(float3(-0.00759836007,1.00186002,0.00533019984), r1.xyz);
  r0.z = dot(float3(0.00307257008,-0.00509594986,1.08168006), r1.xyz);
  o0.x = dot(float3(3.2409699,-1.5373832,-0.498610765), r0.xyz);
  o0.y = dot(float3(-0.969243646,1.8759675,0.0415550582), r0.xyz);
  o0.z = dot(float3(0.0556300804,-0.203976959,1.05697155), r0.xyz);*/
  r0.xyz = mul(ACES_to_SRGB_MAT, r1.yzw);
  r0.xyz = lerp(preCG, r0.xyz, injectedData.colorGradeInternalLUTStrength);
  r0.xyz = applyUserTonemapACES(r0.xyz, 2);
  o0.xyz = r0.xyz;
  o0.w = 1;
  return;
}